name: Grant Write Permission to Forks

on:
  repository:
    types:
      - created

jobs:
  grant-permission:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install octokit/rest.js
        run: npm install @octokit/rest

      - name: Grant Write Permission
        run: |
          # Import the required libraries
          const { Octokit } = require("@octokit/rest");

          // Create an Octokit instance with a GitHub token
          const octokit = new Octokit({
            auth: process.env.GITHUB_TOKEN, // Use the built-in GitHub token for authentication
          });

          // Replace these variables with your own values
          const owner = ""; // Owner of the forked repository
          const repo = "your-repo-name"; // Name of the forked repository
          const username = "collaborator-username"; // GitHub username of the collaborator to grant access to

          // Grant write access to the collaborator
          octokit.repos.addCollaborator({
            owner: owner,
            repo: repo,
            username: username,
            permission: "write", // Adjust permission level as needed (e.g., "read", "write", "admin")
          })
            .then((response) => {
              console.log(`Write access granted to ${username} in ${owner}/${repo}`);
            })
            .catch((error) => {
              console.error(`Error granting access: ${error.message}`);
            });

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use the built-in GitHub token
